#This file handles the Beckhoff I/O modules that control the pneumatics and the spindle


loadrt not names=spindleReverseNOT,spindleRunningNOT
addf spindleReverseNOT servo-thread
addf spindleRunningNOT servo-thread

loadrt and2 names=spindleForwardAND,spindleReverseAND,spindleDrawbarInterlockAND
addf spindleForwardAND servo-thread
addf spindleReverseAND servo-thread
addf spindleDrawbarInterlockAND servo-thread

#Normally the Beckhoff EL2008 for the pneumatics is ethercat slave #7
#The second EL2008 is slave #8
#The homeing input EL2001 is slave #10

#Defines the pins of the beckhoff module and what is driving them
#Note the LCEC output numbers are NOT the same as the numbers on the front of the beckhoff module !!!
net Solenoid0 lcec.0.7.dout-0 <= iocontrol.0.coolant-mist    #Coolant I,  M7
net Solenoid1 lcec.0.7.dout-2 <= iocontrol.0.coolant-flood   #Coolant II, M8
net spindleDrawbar lcec.0.7.dout-5 <= spindleDrawbarInterlockAND.out

#net Solenoid2 lcec.0.7.dout-4 <= motion.digital-out-00       #A-Axis Brake, M64 P0 and M65 P0
#net Solenoid3 lcec.0.7.dout-6 <= motion.digital-out-01       #C-Axis Brake, M64 P1 and M65 P1
#net Solenoid4 lcec.0.7.dout-1                                #Toolsetter purge
#net Solenoid5 lcec.0.7.dout-3                                #Drawbar Release
#net Solenoid6 lcec.0.7.dout-5 <= spindle.0.on               #Spindle Purge, turn on any time the spindle is running. Actually on the lower line
#net Solenoid7 lcec.0.7.dout-7                                #Tool Rack actuator




#This sets up all the homing pins. Not the LCEC output numbers are NOT the same as the numbers on the front of the beckhoff module !!!
net J0homesw lcec.0.10.din-7-not => homeEdgeJ0.in
net J1homesw lcec.0.10.din-4      => homeEdgeJ1.in
net J2homesw lcec.0.10.din-5      => homeEdgeJ2.in
net J3homesw lcec.0.10.din-6-not => homeEdgeJ3.in
#net J4homesw lcec.0.10.din-x-not => homeEdgeJ4.in
#net J5homesw lcec.0.10.din-x-not => homeEdgeJ5.in

net homeSwTriggerJ0 homeEdgeJ0.out => homeLatchJ0.fault-in
net homeSwTriggerJ1 homeEdgeJ1.out => homeLatchJ1.fault-in
net homeSwTriggerJ2 homeEdgeJ2.out => homeLatchJ2.fault-in
net homeSwTriggerJ3 homeEdgeJ3.out => homeLatchJ3.fault-in
net homeSwTriggerJ4 homeEdgeJ4.out => homeLatchJ4.fault-in
net homeSwTriggerJ5 homeEdgeJ5.out => homeLatchJ5.fault-in

setp homeEdgeJ0.both TRUE
setp homeEdgeJ1.both TRUE
setp homeEdgeJ2.both TRUE
setp homeEdgeJ3.both TRUE
setp homeEdgeJ4.both TRUE
setp homeEdgeJ5.both TRUE

setp homeEdgeJ0.out-width-ns 5000000
setp homeEdgeJ1.out-width-ns 5000000
setp homeEdgeJ2.out-width-ns 5000000
setp homeEdgeJ3.out-width-ns 5000000
setp homeEdgeJ4.out-width-ns 5000000
setp homeEdgeJ5.out-width-ns 5000000



#Spindle forward and reverse output pins
net spindle_Run spindleForwardAND.in0 <= spindle.0.on => spindleReverseAND.in0 => spindleRunningNOT.in
net spindle_Dir spindleReverseAND.in1 <= spindle.0.reverse => spindleReverseNOT.in
net spindle_Dir_Not spindleReverseNOT.out => spindleForwardAND.in1
net run_cmd_fwd spindleForwardAND.out => lcec.0.8.dout-0
net run_cmd_rev spindleReverseAND.out => lcec.0.8.dout-2

#Drawbar interlock (forbid releasing the drawbar if the spindle is spinning)
#This does not require an actual tool change to have been requested to trigger the tool change operation (i.e. you don't NEED to use the MDI)
net spindleStopped spindleRunningNOT.out => spindleDrawbarInterlockAND.in0
net lcec.0.10.din-1 => spindleDrawbarInterlockAND.in1 #This is the tool change pushbutton

#Do the spindle speed stuff
#net spindle.0.speed-out => rpm_analog.in    #THIS LINE IS IN SIM SPINDLE ENCODER
setp rpm_analog.offset 0
setp rpm_analog.gain 0.0000833 #10k max speed for a value of 1.
setp lcec.0.9.aout-0-enable 1
net spindle_speed_scalar lcec.0.9.aout-0-value <= rpm_analog.out

#net Spindle_OK lcec.0.10.din0 => motion.spindle.0.at-speed I think this was broken in some way by the sim spindle encoder, but I needed it??
